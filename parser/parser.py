import undetected_chromedriver as uc
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException
import requests
import time
import os

# URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã
url = 'https://www.dns-shop.ru/product/5a7b4c6d0bc3c823/videokarta-msi-geforce-210-n210-1gd3lp/'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥—Ä–∞–π–≤–µ—Ä–∞
options = uc.ChromeOptions()
options.add_argument('--no-sandbox')
options.add_argument('--disable-blink-features=AutomationControlled')
options.add_argument('--lang=ru-RU')
options.add_argument('--window-size=1920,1080')
options.page_load_strategy = 'none'  # –ù–ï –ñ–î–ê–¢–¨ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã

driver = uc.Chrome(options=options)

start_time = time.time()  # –°—Ç–∞—Ä—Ç –∑–∞–º–µ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏

try:
    print("–ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É (–±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏)...")
    driver.get(url)

    # –î–∞—ë–º —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ø–µ—Ä–≤–∏—á–Ω–æ–π –æ—Ç—Ä–∏—Å–æ–≤–∫–∏
    time.sleep(2)

    # üî• --- –ë–õ–û–ö –ü–û–ò–°–ö–ê –ò –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø –ö–ê–†–¢–ò–ù–ö–ò ---
    print("–û–∂–∏–¥–∞–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞...")
    try:
        img_elem = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.CSS_SELECTOR, 'img.product-images-slider__img'))
        )
        img_src = img_elem.get_attribute('src')
        print(f"–ù–∞–π–¥–µ–Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞: {img_src}")

        # –ö–æ–ø–∏—Ä—É–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –ª–æ–∫–∞–ª—å–Ω–æ
        img_response = requests.get(img_src)
        if img_response.status_code == 200:
            with open("product_image.jpg", 'wb') as f:
                f.write(img_response.content)
            print("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–∞–∫ product_image.jpg")
        else:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: —Å—Ç–∞—Ç—É—Å {img_response.status_code}")

    except TimeoutException:
        print("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ—Å–ª–µ —Ç–∞–π–º-–∞—É—Ç–∞.")

    # üî• --- –û–°–¢–ê–õ–¨–ù–ê–Ø –õ–û–ì–ò–ö–ê, –ö–ê–ö –ë–´–õ–û ---

    print("–û–∂–∏–¥–∞–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ '–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ'...")
    try:
        WebDriverWait(driver, 20, poll_frequency=0.1).until(
            lambda d: (
                d.find_element(By.CSS_SELECTOR, 'button.product-characteristics__expand').is_displayed()
                if d.find_elements(By.CSS_SELECTOR, 'button.product-characteristics__expand')
                else (d.execute_script("window.scrollBy(0, 1000); return false;"))
            )
        )

        print("–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ '–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ'!")
        print("–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ '–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ'!")
        expand_button = driver.find_element(By.CSS_SELECTOR, 'button.product-characteristics__expand')
        driver.execute_script("arguments[0].click();", expand_button)  # <-- –∑–∞–º–µ–Ω–∏–ª–∏ –Ω–∞ JS-–∫–ª–∏–∫
        #expand_button.click()
        print("–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞.")

    except TimeoutException:
        print("–ö–Ω–æ–ø–∫–∞ '–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ—Å–ª–µ —Ç–∞–π–º-–∞—É—Ç–∞.")

    # –°–∫—Ä–æ–ª–ª–∏–º –¥–æ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –∂–¥—ë–º –ø–æ–ª–Ω–æ–π –ø–æ–¥–≥—Ä—É–∑–∫–∏
    print("–°–∫—Ä–æ–ª–ª–∏–º –¥–æ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –∂–¥—ë–º –ø–æ–ª–Ω–æ–π –ø–æ–¥–≥—Ä—É–∑–∫–∏...")
    last_height = driver.execute_script("return document.body.scrollHeight")
    driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")

    try:
        WebDriverWait(driver, 5, poll_frequency=0.2).until(
            lambda d: d.execute_script("return document.body.scrollHeight") > last_height
        )
    except TimeoutException:
        pass

    print("–î–æ—Å—Ç–∏–≥–Ω—É—Ç –∫–æ–Ω–µ—Ü —Å—Ç—Ä–∞–Ω–∏—Ü—ã.")

    # –°–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    driver.save_screenshot("debug_screen_uc.png")
    print("–°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –∫–∞–∫ debug_screen_uc.png")

    # –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è –±–ª–æ–∫–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
    wait = WebDriverWait(driver, 10)
    wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'product-characteristics__group')))
    print("–ù–∞–π–¥–µ–Ω –±–ª–æ–∫ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫!")

    spec_groups = driver.find_elements(By.CLASS_NAME, 'product-characteristics__group')

    for group in spec_groups:
        try:
            group_title_elem = group.find_element(By.CLASS_NAME, 'product-characteristics__group-title')
            group_title = group_title_elem.text.strip() if group_title_elem else '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã'
            print(f"\n{group_title}")

            spec_items = group.find_elements(By.CLASS_NAME, 'product-characteristics__spec')
            for item in spec_items:
                title_elem = item.find_element(By.CLASS_NAME, 'product-characteristics__spec-title-content')
                value_elem = item.find_element(By.CLASS_NAME, 'product-characteristics__spec-value')

                title = title_elem.text.strip() if title_elem else 'N/A'
                value = value_elem.text.strip() if value_elem else 'N/A'
                print(f'{title}: {value}')
        except Exception as e:
            print(f"–ü—Ä–æ–ø—É—â–µ–Ω —ç–ª–µ–º–µ–Ω—Ç –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏: {e}")

except Exception as e:
    print(f"–û—à–∏–±–∫–∞: {e}")

finally:
    driver.quit()
    end_time = time.time()  # –ö–æ–Ω–µ—Ü –∑–∞–º–µ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏
    print("–ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç.")
    print(f"–û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {end_time - start_time:.2f} —Å–µ–∫.")
